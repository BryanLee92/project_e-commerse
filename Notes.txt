####################################################################

-- Array.prototype.some()
The some() method of Array instances tests whether at least one 
element in the array passes the test implemented by the provided 
function. 
It returns true if, in the array, it finds an element for which the provided 
function returns true; otherwise it returns false. It doesn't modify the 
array.

####################################################################

-- Array.prototype.findIndex()
The findIndex() method of Array instances returns the index of the 
first element in an array that satisfies the provided testing 
function. 
If no elements satisfy the testing function, -1 is returned.

####################################################################

-- Array.prototype.reduce()
The reduce() method of Array instances executes a user-supplied 
"reducer" callback function on each element of the array, in order,
passing in the return value from the calculation on the preceding 
element. The final result of running the reducer across all 
elements of the array is a single value.

const array1 = [1, 2, 3, 4];

// 0 + 1 + 2 + 3 + 4
const initialValue = 0;
const sumWithInitial = array1.reduce((accumulator, currentValue) => accumulator + currentValue, initialValue);

console.log(sumWithInitial);
// Expected output: 10

####################################################################

-- Array.prototype.filter()
The filter() method of Array instances creates a shallow copy of 
a portion of a given array, filtered down to just the elements 
from the given array that pass the test implemented by the 
provided function.

####################################################################